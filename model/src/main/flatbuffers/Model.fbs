namespace Model;
table AgentBehaviour {
    id:int;
    requests:[Request];
}

table Request {
    id:int;
    name:string;
    args:string;
}

table AgentSnapshot {
    type:string;
    id:int;
    props:string;
    responses:[Response];
}

table Response {
    id:int;
    value:string;
}

table Error {
    code: int;
    text: string;
}

table Snapshot {
    time:float;
    snapshots:[AgentSnapshot];
    errors:[Error];
}
table Behaviour {
    requests:[AgentBehaviour];
}

table GlobalArgs {
    args:string;
}

enum State : byte { Run, Pause, Stop }
table ModelState {
    state: State;
}

table Empty {}

rpc_service API {
  Connect(Empty):ModelState;
  Run(GlobalArgs):Empty;
  RunAndSubscribeOnUpdate(GlobalArgs):Empty (streaming: "server");
  CallBehaviourFunctions(Behaviour):Empty;
  RequestSnapshot(Empty):Snapshot;
  Pause(Empty):Empty;
  Resume(Empty):Empty;
  Stop(Empty):Empty;
}
