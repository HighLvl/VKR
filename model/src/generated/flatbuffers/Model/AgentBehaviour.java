// automatically generated by the FlatBuffers compiler, do not modify

package Model;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AgentBehaviour extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static AgentBehaviour getRootAsAgentBehaviour(ByteBuffer _bb) { return getRootAsAgentBehaviour(_bb, new AgentBehaviour()); }
  public static AgentBehaviour getRootAsAgentBehaviour(ByteBuffer _bb, AgentBehaviour obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AgentBehaviour __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int id() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String requests(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int requestsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector requestsVector() { return requestsVector(new StringVector()); }
  public StringVector requestsVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createAgentBehaviour(FlatBufferBuilder builder,
      int id,
      int requestsOffset) {
    builder.startTable(2);
    AgentBehaviour.addRequests(builder, requestsOffset);
    AgentBehaviour.addId(builder, id);
    return AgentBehaviour.endAgentBehaviour(builder);
  }

  public static void startAgentBehaviour(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addInt(0, id, 0); }
  public static void addRequests(FlatBufferBuilder builder, int requestsOffset) { builder.addOffset(1, requestsOffset, 0); }
  public static int createRequestsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRequestsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAgentBehaviour(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AgentBehaviour get(int j) { return get(new AgentBehaviour(), j); }
    public AgentBehaviour get(AgentBehaviour obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

