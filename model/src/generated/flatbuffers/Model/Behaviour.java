// automatically generated by the FlatBuffers compiler, do not modify

package Model;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Behaviour extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Behaviour getRootAsBehaviour(ByteBuffer _bb) { return getRootAsBehaviour(_bb, new Behaviour()); }
  public static Behaviour getRootAsBehaviour(ByteBuffer _bb, Behaviour obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Behaviour __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Model.AgentBehaviour requests(int j) { return requests(new Model.AgentBehaviour(), j); }
  public Model.AgentBehaviour requests(Model.AgentBehaviour obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int requestsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public Model.AgentBehaviour.Vector requestsVector() { return requestsVector(new Model.AgentBehaviour.Vector()); }
  public Model.AgentBehaviour.Vector requestsVector(Model.AgentBehaviour.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createBehaviour(FlatBufferBuilder builder,
      int requestsOffset) {
    builder.startTable(1);
    Behaviour.addRequests(builder, requestsOffset);
    return Behaviour.endBehaviour(builder);
  }

  public static void startBehaviour(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addRequests(FlatBufferBuilder builder, int requestsOffset) { builder.addOffset(0, requestsOffset, 0); }
  public static int createRequestsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRequestsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endBehaviour(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Behaviour get(int j) { return get(new Behaviour(), j); }
    public Behaviour get(Behaviour obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

