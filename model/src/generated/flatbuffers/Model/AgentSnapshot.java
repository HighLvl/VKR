// automatically generated by the FlatBuffers compiler, do not modify

package Model;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AgentSnapshot extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static AgentSnapshot getRootAsAgentSnapshot(ByteBuffer _bb) { return getRootAsAgentSnapshot(_bb, new AgentSnapshot()); }
  public static AgentSnapshot getRootAsAgentSnapshot(ByteBuffer _bb, AgentSnapshot obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AgentSnapshot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String type() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public int id() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String props() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer propsAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer propsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public Model.Response responses(int j) { return responses(new Model.Response(), j); }
  public Model.Response responses(Model.Response obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int responsesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public Model.Response.Vector responsesVector() { return responsesVector(new Model.Response.Vector()); }
  public Model.Response.Vector responsesVector(Model.Response.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createAgentSnapshot(FlatBufferBuilder builder,
      int typeOffset,
      int id,
      int propsOffset,
      int responsesOffset) {
    builder.startTable(4);
    AgentSnapshot.addResponses(builder, responsesOffset);
    AgentSnapshot.addProps(builder, propsOffset);
    AgentSnapshot.addId(builder, id);
    AgentSnapshot.addType(builder, typeOffset);
    return AgentSnapshot.endAgentSnapshot(builder);
  }

  public static void startAgentSnapshot(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(0, typeOffset, 0); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addInt(1, id, 0); }
  public static void addProps(FlatBufferBuilder builder, int propsOffset) { builder.addOffset(2, propsOffset, 0); }
  public static void addResponses(FlatBufferBuilder builder, int responsesOffset) { builder.addOffset(3, responsesOffset, 0); }
  public static int createResponsesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startResponsesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAgentSnapshot(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AgentSnapshot get(int j) { return get(new AgentSnapshot(), j); }
    public AgentSnapshot get(AgentSnapshot obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

